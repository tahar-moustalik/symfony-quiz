{
  "category": "PHP",
  "questions": [
    {
      "question": "What is the short open tag for PHP?",
      "answers": [
        {
          "value": "<!",
          "correct": false
        },
        {
          "value": "<%",
          "correct": false
        },
        {
          "value": "<?",
          "correct": true
        },
        {
          "value": "<?=",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/language.basic-syntax.phptags.php\n"
    },
    {
      "question": "Which of these operators is non-associative?",
      "answers": [
        {
          "value": "!",
          "correct": false
        },
        {
          "value": "**",
          "correct": false
        },
        {
          "value": "<",
          "correct": true
        },
        {
          "value": "and",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/language.operators.precedence.php\n"
    },
    {
      "question": "Since PHP 5.6+, if function foo() is defined in the namespace Myapp\\Utils\\Bar and your code is in namespace Myapp, what is the correct way to import the foo() function?",
      "answers": [
        {
          "value": "use function foo;",
          "correct": false
        },
        {
          "value": "use Myapp\\Utils\\Bar\\foo;",
          "correct": false
        },
        {
          "value": "use function Myapp\\Utils\\Bar\\foo;",
          "correct": true
        },
        {
          "value": "use Utils\\Bar\\Foo;",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/language.namespaces.importing.php\n"
    },
    {
      "question": "True or False? It is possible to import all classes from a namespace in PHP.",
      "answers": [
        {
          "value": "True",
          "correct": false
        },
        {
          "value": "False",
          "correct": true
        }
      ],
      "help": "https://www.php.net/manual/en/language.namespaces.importing.php\n"
    },
    {
      "question": "Which web services are supported natively in PHP?",
      "answers": [
        {
          "value": "SOAP and XML-RPC",
          "correct": true
        },
        {
          "value": "REST and SOAP",
          "correct": false
        },
        {
          "value": "Corba and XML-RPC",
          "correct": false
        },
        {
          "value": "XML-RPC and REST",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/refs.webservice.php\n"
    },
    {
      "question": "Variable names and function names are, respectively:",
      "answers": [
        {
          "value": "case insensitive and case sensitive",
          "correct": false
        },
        {
          "value": "case sensitive and case sensitive",
          "correct": false
        },
        {
          "value": "case sensitive and case insensitive",
          "correct": true
        },
        {
          "value": "case insensitive and case insensitive",
          "correct": false
        }
      ],
      "help": "https://tutorialsclass.com/faq/is-php-a-case-sensitive-language/\n"
    },
    {
      "question": "Does PHP support function overloading?",
      "answers": [
        {
          "value": "Yes, in all cases",
          "correct": false
        },
        {
          "value": "No, in all cases",
          "correct": true
        },
        {
          "value": "Yes, but it depends on the function scope",
          "correct": false
        },
        {
          "value": "Yes, except when it is an anonymous function",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/language.oop5.overloading.php\n"
    },
    {
      "question": "Which of the following statements is not true?",
      "answers": [
        {
          "value": "In PHP>=5.6 argument lists may include the ... token to denote that the function accepts a variable number of arguments",
          "correct": false
        },
        {
          "value": "A function name, as other labels in PHP, must match the following regular expression: [a-zA-Z_-ÿ][a-zA-Z0-9_-ÿ]*",
          "correct": false
        },
        {
          "value": "Variable functions work with language constructs such as echo, print, unset(), isset(), empty(), include or require",
          "correct": true
        },
        {
          "value": "Assigning a closure (anonymous function) to a variable uses the same syntax as any other assignment, including the trailing semicolon",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/functions.arguments.php#functions.variable-arg-list\nhttps://www.php.net/manual/en/functions.user-defined.php\nhttps://www.php.net/manual/en/functions.anonymous.php\nhttps://www.php.net/manual/en/functions.variable-functions.php\n"
    },
    {
      "question": "Which of the following function declarations must be used to return a reference?",
      "answers": [
        {
          "value": "function &foo() {...}",
          "correct": true
        },
        {
          "value": "function $foo() {...}",
          "correct": false
        },
        {
          "value": "function %foo() {...}",
          "correct": false
        },
        {
          "value": "function $$foo() {...}",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/language.references.return.php\n"
    },
    {
      "question": "The ______ keyword is used to indicate an incomplete class or method, which must be further extended and/or implemented in order to be used.",
      "answers": [
        {
          "value": "abstract",
          "correct": true
        },
        {
          "value": "final",
          "correct": false
        },
        {
          "value": "protected",
          "correct": false
        },
        {
          "value": "incomplete",
          "correct": false
        },
        {
          "value": "implements",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/language.oop5.abstract.php\n"
    },
    {
      "question": "According to the PHP Framework Interoperability Group, which PSRs concern best coding practices ?",
      "answers": [
        {
          "value": "PSR-0",
          "correct": false
        },
        {
          "value": "PSR-1",
          "correct": true
        },
        {
          "value": "PSR-2",
          "correct": true
        },
        {
          "value": "PSR-3",
          "correct": false
        },
        {
          "value": "PSR-4",
          "correct": false
        }
      ],
      "help": "https://www.php-fig.org/psr/\n"
    },
    {
      "question": "Since PHP 5.4, which functionality allows horizontal composition of behavior ?",
      "answers": [
        {
          "value": "Traits",
          "correct": true
        },
        {
          "value": "Object Cloning",
          "correct": false
        },
        {
          "value": "ReflectionClass",
          "correct": false
        },
        {
          "value": "Inheritance",
          "correct": false
        }
      ],
      "help": "https://www.php.net/manual/en/language.oop5.traits.php\n"
    },
    {
      "question": "True or False ? A closure is a lambda function that is aware of its surrounding context.",
      "answers": [
        {
          "value": "True",
          "correct": true
        },
        {
          "value": "False",
          "correct": false
        }
      ],
      "help": "http://fabien.potencier.org/on-php-5-3-lambda-functions-and-closures.html\nhttps://www.php.net/manual/en/functions.anonymous.php\n"
    },
    {
      "question": "True or False ? A lambda function is a named PHP function that can be stored in a variable.",
      "answers": [
        {
          "value": "True",
          "correct": false
        },
        {
          "value": "False",
          "correct": true
        }
      ],
      "help": "http://fabien.potencier.org/on-php-5-3-lambda-functions-and-closures.html\nhttps://www.php.net/manual/en/functions.anonymous.php\n"
    },
    {
      "question": "True or False ? An object is always used by reference ?",
      "answers": [
        {
          "value": "True",
          "correct": true
        },
        {
          "value": "False",
          "correct": false
        }
      ],
      "help": "http://php.net/manual/en/oop5.intro.php\n"
    },
    {
      "question": "$instance = new SimpleClass();\n$assigned   =  $instance;\n$instance = null;\nvar_dump($assigned);\nTrue or false ? The code above display \"null\" ?\n",
      "answers": [
        {
          "value": "True",
          "correct": false
        },
        {
          "value": "False",
          "correct": true
        }
      ],
      "help": "http://php.net/manual/en/language.oop5.basic.php#example-179\n"
    },
    {
      "question": "In a class, \"public $var4 = self::myStaticMethod();\" is a valid property declaration ?",
      "answers": [
        {
          "value": "True",
          "correct": false
        },
        {
          "value": "False",
          "correct": true
        }
      ],
      "help": "http://php.net/manual/en/language.oop5.properties.php#example-186\n"
    },
    {
      "question": "True or False ? Is it possible to declare constant in an interface ?",
      "answers": [
        {
          "value": "True",
          "correct": true
        },
        {
          "value": "False",
          "correct": false
        }
      ],
      "help": "http://php.net/manual/en/language.oop5.interfaces.php#language.oop5.interfaces.constants\n"
    },
    {
      "question": "True or False ? Declaring class properties or methods as static makes them accessible without needing an instantiation of the class ?",
      "answers": [
        {
          "value": "True",
          "correct": true
        },
        {
          "value": "False",
          "correct": false
        }
      ],
      "help": "http://php.net/manual/en/language.oop5.static.php\n"
    },
    {
      "question": "Which keyword permit to use the late static binding ?",
      "answers": [
        {
          "value": "self",
          "correct": false
        },
        {
          "value": "static",
          "correct": true
        },
        {
          "value": "parent",
          "correct": false
        }
      ],
      "help": "http://php.net/manual/en/language.oop5.late-static-bindings.php\n"
    }
  ]
}
