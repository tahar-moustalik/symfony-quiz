{
  "category": "Forms",
  "questions": [
    {
      "question": "Inside a form type, how to render a DateType field in an text input field?",
      "answers": [
        {
          "value": "Add an option 'render' => 'input'",
          "correct": false
        },
        {
          "value": "Add an option 'widget' => 'text'",
          "correct": false
        },
        {
          "value": "Add an option 'widget' => 'single_text'",
          "correct": true
        },
        {
          "value": "Add an option 'widget' => 'input'",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/reference/forms/types/date.html#widget\n"
    },
    {
      "question": "Which method allows you to handle the request on a form instance?",
      "answers": [
        {
          "value": "$form->bindRequest($request)",
          "correct": false
        },
        {
          "value": "$form->handleRequest($request)",
          "correct": true
        },
        {
          "value": "$form->handle($request)",
          "correct": false
        },
        {
          "value": "$form->request($request)",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/forms.html#processing-forms\n"
    },
    {
      "question": "From a Form instance, which method can you call to obtain a FormView instance?",
      "answers": [
        {
          "value": "$form->getView()",
          "correct": false
        },
        {
          "value": "$form->renderView()",
          "correct": false
        },
        {
          "value": "$form->view()",
          "correct": false
        },
        {
          "value": "$form->createView()",
          "correct": true
        }
      ],
      "help": "https://symfony.com/doc/current/forms.html#processing-forms\n"
    },
    {
      "question": "In a Twig template, which function render a form field?",
      "answers": [
        {
          "value": "{{ form_item(form.field) }}",
          "correct": false
        },
        {
          "value": "{{ form_render(form.field) }}",
          "correct": false
        },
        {
          "value": "{{ form_widget(form.field) }}",
          "correct": true
        },
        {
          "value": "{{ form_view(form.field) }}",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/form_customization.html#form-widget-form-view-variables\n"
    },
    {
      "question": "Using Form factory, how to define a CSRF provider?",
      "answers": [
        {
          "value": "$formFactory->addExtension(new CsrfExtension($csrfManager));",
          "correct": true
        },
        {
          "value": "$formFactory->setExtension(new CsrfExtension($csrfManager));",
          "correct": false
        },
        {
          "value": "$formFactory->addCsrfExtension(new CsrfExtension($csrfManager));",
          "correct": false
        },
        {
          "value": "$formFactory->addExtension(new Csrf($csrfManager));",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/components/form.html#csrf-protection\n"
    },
    {
      "question": "Using Form component, which option can you use into configureOptions() method to define CSRF field name?",
      "answers": [
        {
          "value": "csrf_field_name",
          "correct": true
        },
        {
          "value": "csrf_fieldname",
          "correct": false
        },
        {
          "value": "csrf_field",
          "correct": false
        },
        {
          "value": "csrf_name",
          "correct": false
        },
        {
          "value": "csrf_protection",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/security/csrf.html#csrf-protection-in-symfony-forms\n"
    },
    {
      "question": "Using Form component, which option can you use into configureOptions() method to enable CSRF protection?",
      "answers": [
        {
          "value": "\"csrf_protection\" => true",
          "correct": true
        },
        {
          "value": "\"csrf_field\" => true",
          "correct": false
        },
        {
          "value": "\"csrf\" => \"enabled\"",
          "correct": false
        },
        {
          "value": "\"csrf\" => true",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/security/csrf.html#csrf-protection-in-symfony-forms\n"
    },
    {
      "question": "Using Form component, option csrf_error_message can be used in configureOptions() to define a custom CSRF error message?",
      "answers": [
        {
          "value": "Yes",
          "correct": false
        },
        {
          "value": "No",
          "correct": true
        }
      ],
      "help": "https://symfony.com/doc/current/security/csrf.html#csrf-protection-in-symfony-forms\n"
    },
    {
      "question": "Using Form component, which option will allow you to specify groups used for validation?",
      "answers": [
        {
          "value": "validation_groups",
          "correct": true
        },
        {
          "value": "groups_validation",
          "correct": false
        },
        {
          "value": "validator_groups",
          "correct": false
        },
        {
          "value": "groups_validator",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/validation_groups.html#validation-groups\n"
    },
    {
      "question": "Which form event exist?",
      "answers": [
        {
          "value": "FormEvents::PRE_SET_DATA",
          "correct": true
        },
        {
          "value": "FormEvents::SET_DATA",
          "correct": false
        },
        {
          "value": "FormEvents::POST_SET_DATA",
          "correct": true
        },
        {
          "value": "FormEvents::PRE_SUBMIT",
          "correct": true
        },
        {
          "value": "FormEvents::SUBMIT",
          "correct": true
        },
        {
          "value": "FormEvents::POST_SUBMIT",
          "correct": true
        },
        {
          "value": "FormEvents::POST_REQUEST",
          "correct": false
        },
        {
          "value": "FormEvents::REQUEST",
          "correct": false
        },
        {
          "value": "FormEvents::PRE_REQUEST",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/events.html\n"
    },
    {
      "question": "What data is inside FormEvent object at FormEvents::PRE_SET_DATA?",
      "answers": [
        {
          "value": "Model data",
          "correct": true
        },
        {
          "value": "Normalized data",
          "correct": false
        },
        {
          "value": "Request data",
          "correct": false
        },
        {
          "value": "View data",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/events.html#registering-event-listeners-or-event-subscribers\n"
    },
    {
      "question": "What data is inside FormEvent object at FormEvents::PRE_SUBMIT?",
      "answers": [
        {
          "value": "Model data",
          "correct": false
        },
        {
          "value": "Normalized data",
          "correct": false
        },
        {
          "value": "Request data",
          "correct": true
        },
        {
          "value": "View data",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/events.html#registering-event-listeners-or-event-subscribers\n"
    },
    {
      "question": "What data is inside FormEvent object at FormEvents::POST_SET_DATA?",
      "answers": [
        {
          "value": "Model data",
          "correct": true
        },
        {
          "value": "Normalized data",
          "correct": false
        },
        {
          "value": "Request data",
          "correct": false
        },
        {
          "value": "View data",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/events.html#registering-event-listeners-or-event-subscribers\n"
    },
    {
      "question": "What data is inside FormEvent object at FormEvents::SUBMIT?",
      "answers": [
        {
          "value": "Model data",
          "correct": false
        },
        {
          "value": "Normalized data",
          "correct": true
        },
        {
          "value": "Request data",
          "correct": false
        },
        {
          "value": "View data",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/events.html#registering-event-listeners-or-event-subscribers\n"
    },
    {
      "question": "What data is inside FormEvent object at FormEvents::POST_SUBMIT?",
      "answers": [
        {
          "value": "Model data",
          "correct": false
        },
        {
          "value": "Normalized data",
          "correct": false
        },
        {
          "value": "Request data",
          "correct": false
        },
        {
          "value": "View data",
          "correct": true
        }
      ],
      "help": "https://symfony.com/doc/current/form/events.html#registering-event-listeners-or-event-subscribers\n"
    },
    {
      "question": "Which one of these types extends from TextType?",
      "answers": [
        {
          "value": "MoneyType",
          "correct": false
        },
        {
          "value": "CurrencyType",
          "correct": false
        },
        {
          "value": "TextareaType",
          "correct": true
        },
        {
          "value": "UrlType",
          "correct": true
        },
        {
          "value": "Password",
          "correct": true
        },
        {
          "value": "EmailType",
          "correct": true
        }
      ],
      "help": "https://symfony.com/doc/current/reference/forms/types.html#text-fields\nhttps://github.com/symfony/symfony/tree/master/src/Symfony/Component/Form/Extension/Core/Type\n"
    },
    {
      "question": "Which date type exist?",
      "answers": [
        {
          "value": "date",
          "correct": true
        },
        {
          "value": "datetime",
          "correct": true
        },
        {
          "value": "time",
          "correct": true
        },
        {
          "value": "timestamp",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/reference/forms/types.html#date-and-time-fields\n"
    },
    {
      "question": "How do you bind a constraint to a form field?",
      "answers": [
        {
          "value": "Using option 'constraints' in $formBuilder->add()",
          "correct": true
        },
        {
          "value": "Passing constraint instance in $this->createFormBuilder()",
          "correct": false
        },
        {
          "value": "Invoke $formBuilder->setConstraints() method",
          "correct": false
        },
        {
          "value": "Add an annotation in model",
          "correct": true
        }
      ],
      "help": "https://symfony.com/doc/current/forms.html#validating-forms\nhttps://symfony.com/doc/current/components/form.html#component-form-intro-validation\n"
    },
    {
      "question": "Using form component, option \"error_bubbling\" will include error in current field.",
      "answers": [
        {
          "value": "True",
          "correct": false
        },
        {
          "value": "False",
          "correct": true
        }
      ],
      "help": "https://symfony.com/doc/current/reference/forms/types/text.html#error-bubbling\n"
    },
    {
      "question": "How do you set default value?",
      "answers": [
        {
          "value": "$this->createFormBuilder($defaultEntityOrArray)",
          "correct": true
        },
        {
          "value": "$this->createFormBuilder(null, $defaultEntityOrArray)",
          "correct": false
        },
        {
          "value": "$this->createFormBuilder()->setDefaults($defaultEntityOrArray)",
          "correct": false
        },
        {
          "value": "$this->createFormBuilder()->addDefaults($defaultEntityOrArray)",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/components/form.html#setting-default-values\n"
    },
    {
      "question": "Your Form class must extends ____ ",
      "answers": [
        {
          "value": "Symfony\\Component\\Form\\FormType",
          "correct": false
        },
        {
          "value": "Symfony\\Component\\Form\\AbstractType",
          "correct": true
        },
        {
          "value": "Symfony\\Component\\Form\\AbstractFormType",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/forms.html#creating-form-classes\n"
    },
    {
      "question": "How to add an extra field `extra` with the form ?",
      "answers": [
        {
          "value": "$builder->add('extra', null, ['mapped' => false])",
          "correct": true
        },
        {
          "value": "$builder->add('extra', 'hidden', ['mapped' => false])",
          "correct": true
        },
        {
          "value": "$builder->add('extra', null, ['validation' => false]",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/forms.html#unmapped-fields\n"
    },
    {
      "question": "How do you render all the form fields in twig ?",
      "answers": [
        {
          "value": "form_widget(form)",
          "correct": true
        },
        {
          "value": "form_render(form)",
          "correct": false
        },
        {
          "value": "form_fields(form)",
          "correct": false
        },
        {
          "value": "render_form(form)",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/form_customization.html#form-widget-form-view-variables\n"
    },
    {
      "question": "If you use form_widget() on a single fields, which parts are render ?",
      "answers": [
        {
          "value": "label",
          "correct": false
        },
        {
          "value": "input",
          "correct": true
        },
        {
          "value": "error",
          "correct": false
        },
        {
          "value": "label and input",
          "correct": false
        },
        {
          "value": "error, label and input",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/form_customization.html#form-rendering-functions\n"
    },
    {
      "question": "According to Symfony best practices, where you should add buttons ?",
      "answers": [
        {
          "value": "Template",
          "correct": true
        },
        {
          "value": "Form",
          "correct": false
        },
        {
          "value": "Controller",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/best_practices.html#add-form-buttons-in-templates\n"
    },
    {
      "question": "Which Field type exist?",
      "answers": [
        {
          "value": "HiddenType",
          "correct": true
        },
        {
          "value": "SearchType",
          "correct": true
        },
        {
          "value": "BirthdayType",
          "correct": true
        },
        {
          "value": "PasswordType",
          "correct": true
        },
        {
          "value": "SelectType",
          "correct": false
        },
        {
          "value": "FloatType",
          "correct": false
        },
        {
          "value": "BooleanType",
          "correct": false
        }
      ],
      "help": "https://github.com/symfony/symfony/tree/master/src/Symfony/Component/Form/Extension/Core/Type\n"
    },
    {
      "question": "How to Disable the Validation of Submitted Data",
      "answers": [
        {
          "value": "set the validation_groups option to false",
          "correct": true
        },
        {
          "value": "set the validation_enable option to false",
          "correct": false
        },
        {
          "value": "set the enable_validation option to false",
          "correct": false
        },
        {
          "value": "$this->createFormBuilder()->isValidated(false)",
          "correct": false
        },
        {
          "value": "By using false as third parameter for createFormBuilder",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/disabling_validation.html\n"
    },
    {
      "question": "Which form event dont exist?",
      "answers": [
        {
          "value": "FormEvents::PRE_SET_DATA",
          "correct": false
        },
        {
          "value": "FormEvents::SUBMIT",
          "correct": false
        },
        {
          "value": "FormEvents::POST_SUBMIT",
          "correct": false
        },
        {
          "value": "FormEvents::SET_DATA",
          "correct": true
        }
      ],
      "help": "https://symfony.com/doc/current/form/events.html\n"
    },
    {
      "question": "How do you upload a UploadedFile ?",
      "answers": [
        {
          "value": "$file->move(string $directory, string $name = null)",
          "correct": true
        },
        {
          "value": "$file->upload(string $directory, string $name = null)",
          "correct": false
        },
        {
          "value": "$file->uploadFile(string $directory, string $name = null)",
          "correct": false
        },
        {
          "value": "$file->save(string $directory, string $name = null)",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/controller/upload_file.html#creating-an-uploader-service\n"
    },
    {
      "question": "How to Use Data Transformers ?",
      "answers": [
        {
          "value": "$builder->get('tags')->addModelTransformer(...);",
          "correct": true
        },
        {
          "value": "$builder->add($builder->create('tags', TextType::class)->addModelTransformer(...));",
          "correct": true
        },
        {
          "value": "$builder->add('tags', TextType::class)->addModelTransformer(...);",
          "correct": false
        }
      ],
      "help": "https://symfony.com/doc/current/form/data_transformers.html\n"
    }
  ]
}
